#include <iostream>
#include <windows.h>
#include <cstdlib>


using namespace std;

template<typename T>
class Tablica {
private:
    T* array;
    size_t capacity;
    size_t size;

    void podwojenie() {
        capacity = 2 * size;
        T* nowy = new T[capacity];
        int i=0;
        while (i < size) {
            nowy[i] = array[i];
            i++;
        }
        delete[] array;
        array = nowy;
    }
public:
    Tablica() : capacity(4), size(0) {
        array = new T[capacity];
    }
    ~Tablica() {
        delete[] array;
    }
    void zapisywanie() {
        int liczba, y, z=0;
        cout << "podaj liczbe wyrazow tablicy: ";
        cin >> y;
        srand(time(NULL));
        while (z < y)
        {
            if (size == capacity) {
                podwojenie();
            }
            liczba = rand() % y + 1;
            array[size++] = liczba;
            z++;
        }
    }
    void dodawanie_koniec(T element) {
        if (size == capacity) {
            podwojenie();
        }
        array[size++] = element;
    }
    void usuwanie_koniec() {
        T* koniec = new T[capacity];
        int i = 0;
        size--;
        while (i < size) {
            koniec[i] = array[i];
            i++;
        }
        delete[] array;
        array = koniec;
    }
    void dodawanie_poczatek(T element) {
        if (size == capacity) {
            podwojenie();
        }
        size++;
        for (int x = size; x > 0; x--) {
            array[x] = array[x-1];
        }
        array[0] = element;
    }
    void usuwanie_poczatek() {
        T* poczatek = new T[capacity];
        int i=0;
        for (int x = 1; x < size; x++) {
            array[x-1] = array[x];
        }
        size--;
        while (i < size) {
            poczatek[i] = array[i];
            i++;
        }
        delete[] array;
        array = poczatek;
    }
    void dodawanie_srodek() {
        int z, srodek;
        cout << "Podaj pozycje na ktora chcesz dodac liczbe";
        cin >> z;
        if (z > size) {
            cout << "podane miejsce wykracza poza zakres";
            return;
        }
        size++;
        srand(time(NULL));
        srodek = rand() % 99 + 1;
        for (int x = size; x >= z; x--) {
            array[x] = array[x - 1];
        }
        array[z-1] = srodek;
    }
    void usuwanie_srodek() {
        T* srodek = new T[capacity];
        int s, i=0, n=0;
        cout << "podaj pozycje do usuniencia";
        cin >> s;
        size--;
        while (i < size) {
            srodek[i] = array[n];
            i++;
            n++;
            if (i == (s - 1)) {
                n++;
            }
        }
        delete[] array;
        array = srodek;
    }
    void wyszukiwanie() {
        int szukana;
        cout << "podaj liczbe ktorej szukasz: ";
        cin >> szukana;
        for (int i = 0; i < size; i++) {
            if (array[i] == szukana)
            {
                cout << "HURRA podana liczba znajduje sie na " << i+1 << "pozycji"<<endl;
                return;
            }
            else if (i == (size - 1))
            {
                cout << "Niestety w zbiorze nie ma takiej liczby"<<endl;
                return;
            }
        }
    }
    void show() {
        int x;
        cout << "podaj warosc pozycji ktora chcesz zwrocic ";
        cin >> x;
        if (x > size) {
            cout << "tablica nie ma tulu elemenetÃ³w";
            return;
        }
        cout << "podany wtraz to " << array[x-1];
    }
    void test() {
        for (int i = 0; i < size; i++) {
            cout << array[i] << endl;
        }
    }
};


int main()
{
    Tablica<int> tab;

    tab.zapisywanie();
    tab.test();
    tab.dodawanie_koniec(24);
    tab.test();
    tab.usuwanie_koniec();
    tab.test();
    tab.dodawanie_poczatek(89);
    tab.test();
    tab.usuwanie_poczatek();
    tab.test();
    tab.dodawanie_srodek();
    tab.test();
    tab.usuwanie_srodek();
    tab.test();
    tab.wyszukiwanie();
    tab.show();



    return 0;
}
